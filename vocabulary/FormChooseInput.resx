<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/7gAOQWRvYmUAZAAAAAAB/+EGnEV4aWYAAE1NACoAAAAIAAwBAAAD
        AAAAAQH+AAABAQADAAAAAQF+AAABAgADAAAAAwAAAJ4BBgADAAAAAQACAAABEgADAAAAAQABAAABFQAD
        AAAAAQADAAABGgAFAAAAAQAAAKQBGwAFAAAAAQAAAKwBKAADAAAAAQACAAABMQACAAAAHgAAALQBMgAC
        AAAAFAAAANKHaQAEAAAAAQAAAOYAAAEeAAgACAAIAGAAAAABAAAAYAAAAAEAAEFkb2JlIFBob3Rvc2hv
        cCBDUzUuMSBXaW5kb3dzADIwMTg6MTI6MDUgMTc6MDA6MzEAAASQAAAHAAAABDAyMjGgAQADAAAAAf//
        AACgAgAEAAAAAQAAAf6gAwAEAAAAAQAAAX4AAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABbAEb
        AAUAAAABAAABdAEoAAMAAAABAAIAAAIBAAQAAAABAAABfAICAAQAAAABAAAFFwAAAAAAAABIAAAAAQAA
        AEgAAAAB/9j/7QAMQWRvYmVfQ00AAv/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUP
        DAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQO
        Dg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAHgA
        oAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEB
        AAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFC
        IyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0
        pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFx
        IhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePz
        RpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APUEkklVXKSS
        SSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//Q9QSSSVVcpJJJJSkkkklKSSSSUpJJ
        JJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9H1BJJJVVykkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkk
        klKSSSSUpJJJJT//0vUEkklVXKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklP//T
        9QSSSVVcpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//9T1BJJJVVykkkklKSSS
        SUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJIkDkxJjXxKp/a8v9snCOPOGcUXjLE6W+oanY7/AM33
        17ba/wCpYkBan//V9QSSSVVcpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpRe9lYDnuDQSGgnQbnEMY3
        +292xSHKy24WVldGvwep+54L2sex3ucxjvUxbXED2Xe2v99JJB4SRVjaJNWmy+rUYnVcHptwId1Ft3oW
        TpvpDLPRcI/wlT7Htdu/wSfDdnnP6hXlbTiB9ZwuN+x1bPXa4NH819obZ6e/9J/O/wCD9JNlXubh0ZFb
        i4sewkuiTILHizaA3873qtf1GoZ7X0O3PFQD2HTQmdv/AEkjIBfCBN6biv7tJqQ6ro/peobbcNmx73DU
        upP0o/lbPapX9Rpb6D2uAeXEOqnWCDuEf2fYsR+fkXMyhWTRY8vD4M8nd/1KrtuddTVkT7z9Ins9p/8A
        SgTDLW2SOAAV22+x/9b1BJfLSSqrn6lSXy0kkp+pUl8tJJKfqVJfLSSSn6lSXy0kkp+pUl8tJJKfqVJf
        LSSSn6lWTnZ76MjJqqneWjkaAlo2vXzgkmy207smKrN7U+75N91+AxwcQayHbAdA5vtd/wB+QvUa2yq4
        aNPPwPtK8NSUfRsir0fdLopzA7htzdZ/eagVEMtvxuWu/SM+B9tn/fF4kkkvGz//2QD/2wBDAAICAgIC
        AgICAgIDAgICAwQDAgIDBAUEBAQEBAUGBQUFBQUFBgYHBwgHBwYJCQoKCQkMDAwMDAwMDAwMDAwMDAz/
        2wBDAQMDAwUEBQkGBgkNCgkKDQ8ODg4ODw8MDAwMDA8PDAwMDAwMDwwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAz/wgARCAF+Af4DAREAAhEBAxEB/8QAHQABAAIDAAMBAAAAAAAAAAAAAAYHBQgJAQIEA//E
        AC8QAAAGAQMDBAAGAgMAAAAAAAABAgMEBQZQEQchEhMQMRQIsCIyIxYJQRUzJCX/xAAbAQEAAgMBAQAA
        AAAAAAAAAAAAAwQBAgUGB//EAE4RAAEDAgQCBQcIBAgPAAAAAAECAwQRBQAhEhMxBkEiIzMUEFBRYYFD
        JHGCU3ODoxUHMpKTs/CRobFSYzREsEJicqKywsPT82R0hJQX/8QAMxIAAQMCBAQCCQQDAAAAAAAAAQAR
        AhAxUCFBElFhcQPwIjBAYLCBkaGxBCDB4UIyExT/2gAMAwEAAhADEAAAAO7/AJG0AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWOdKjs1tqqtwAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfDDt9kusX300B6PG6UczuAAAAAAAAAAAAAAAAAAAAAAAAAAADweShLvDvul3Ivz7HhmU9CtEI
        rEulr+QAAAAAAAAAAAAAAAAAAAAAAAAAYDDP5Y/G3J+19U64VvlOnXY8nuHx/WemM0XQ7V8dDiVDU6Em
        2inNmoAAAAAAAAAAAAAAAAAAAAAAAAMZjXJ52539Dl3fBNtDWvaQZ9nu/jxkB0vNJZ9NzNPOV63YS5wq
        wxJHYru2F/zwAAAAAAAAAAAAAAAAAAAAAAHw4yPuzjnnc+f9DKf0CmZI6qk227r7UfU7dpzcz4s513o+
        o2Y6HlNXud6LDQWqosyZ/aDoZf8AIAAAAAAAAAAAAAAAAAAAAAAAepz6ofRug9/5zqzY87c0HXnutvVO
        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
</value>
  </data>
</root>